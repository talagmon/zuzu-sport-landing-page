name: Performance Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g @lhci/cli@0.12.x
          npm install -g http-server
          
      - name: Start local server
        run: |
          http-server . -p 8080 &
          sleep 5
          
      - name: Run Lighthouse CI
        run: |
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
          
  performance-budget:
    runs-on: ubuntu-latest
    needs: lighthouse-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download Lighthouse results
        uses: actions/download-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/
          
      - name: Performance Budget Check
        run: |
          node scripts/performance-budget-check.js
          
  mobile-performance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g lighthouse
          npm install -g http-server
          
      - name: Start local server
        run: |
          http-server . -p 8080 &
          sleep 5
          
      - name: Run Mobile Performance Test
        run: |
          lighthouse http://localhost:8080 \
            --form-factor=mobile \
            --throttling-method=devtools \
            --throttling.rttMs=150 \
            --throttling.throughputKbps=1638.4 \
            --throttling.cpuSlowdownMultiplier=4 \
            --output=json \
            --output-path=mobile-performance.json \
            --chrome-flags="--headless --no-sandbox --disable-gpu"
            
          lighthouse http://localhost:8080/index-he.html \
            --form-factor=mobile \
            --throttling-method=devtools \
            --throttling.rttMs=150 \
            --throttling.throughputKbps=1638.4 \
            --throttling.cpuSlowdownMultiplier=4 \
            --output=json \
            --output-path=mobile-performance-he.json \
            --chrome-flags="--headless --no-sandbox --disable-gpu"
            
      - name: Upload Mobile Performance Results
        uses: actions/upload-artifact@v3
        with:
          name: mobile-performance-results
          path: mobile-performance*.json

  accessibility-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g @axe-core/cli
          npm install -g http-server
          
      - name: Start local server
        run: |
          http-server . -p 8080 &
          sleep 5
          
      - name: Run Accessibility Tests
        run: |
          axe http://localhost:8080 --save accessibility-report-en.json
          axe http://localhost:8080/index-he.html --save accessibility-report-he.json
          
      - name: Upload Accessibility Results
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-results
          path: accessibility-report*.json

  performance-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
          
      - name: Checkout PR branch  
        uses: actions/checkout@v4
        with:
          path: pr
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g lighthouse
          npm install -g http-server
          
      - name: Test base branch performance
        run: |
          cd base
          http-server . -p 8081 &
          sleep 5
          lighthouse http://localhost:8081 --output=json --output-path=../base-performance.json --chrome-flags="--headless --no-sandbox"
          kill %1
          
      - name: Test PR branch performance
        run: |
          cd pr  
          http-server . -p 8082 &
          sleep 5
          lighthouse http://localhost:8082 --output=json --output-path=../pr-performance.json --chrome-flags="--headless --no-sandbox"
          kill %1
          
      - name: Compare Performance
        run: |
          node pr/scripts/performance-regression-check.js base-performance.json pr-performance.json
          
  seo-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g lighthouse
          npm install -g http-server
          
      - name: Start local server
        run: |
          http-server . -p 8080 &
          sleep 5
          
      - name: Run SEO Audit
        run: |
          lighthouse http://localhost:8080 \
            --only-categories=seo \
            --output=json \
            --output-path=seo-audit-en.json \
            --chrome-flags="--headless --no-sandbox"
            
          lighthouse http://localhost:8080/index-he.html \
            --only-categories=seo \
            --output=json \
            --output-path=seo-audit-he.json \
            --chrome-flags="--headless --no-sandbox"
            
      - name: Upload SEO Results
        uses: actions/upload-artifact@v3
        with:
          name: seo-audit-results
          path: seo-audit*.json